name: Django CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Set environment variables
      run: |
        echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> $GITHUB_ENV
        echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> $GITHUB_ENV
        echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> $GITHUB_ENV
        echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> $GITHUB_ENV
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
        echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> $GITHUB_ENV
        echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> $GITHUB_ENV
        echo "DEFAULT_SENDER=${{ secrets.DEFAULT_SENDER }}" >> $GITHUB_ENV
        echo "DB_HOST=127.0.0.1" >> $GITHUB_ENV

    - name: Wait for MySQL to be ready
      run: |
        while ! mysqladmin ping -h"127.0.0.1" --silent; do
          sleep 1
        done
    
    - name: Grant privileges to MySQL user
      env:
        MYSQL_PWD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      run: |
        mysql -h 127.0.0.1 -u root -e "GRANT ALL PRIVILEGES ON *.* TO '${{ secrets.MYSQL_USER }}'@'%' WITH GRANT OPTION; FLUSH PRIVILEGES;"


    - name: Run migrations
      env:
        DATABASE_URL: mysql://${{ secrets.MYSQL_USER }}:${{ secrets.MYSQL_PASSWORD }}@127.0.0.1/${{ secrets.MYSQL_DATABASE }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        python manage.py migrate
    
    - name: Run tests
      env:
        DATABASE_URL: mysql://${{ secrets.MYSQL_USER }}:${{ secrets.MYSQL_PASSWORD }}@127.0.0.1/${{ secrets.MYSQL_DATABASE }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        python manage.py test
  
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: test

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Set up SSH
  #     uses: webfactory/ssh-agent@v0.5.3
  #     with:
  #       ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
  #   - name: Deploy to DigitalOcean Droplet
  #     run: |
  #       ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
  #         cd blogapi
  #         git pull origin main
  #         docker compose down
  #         docker compose up -d --build
  #       EOF

